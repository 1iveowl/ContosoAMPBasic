@using SaaSFulfillmentClient.Models
@model AzureSubscriptionProvisionModel

@{
    ViewData["Title"] = "Index";
}

<h1>Configure subscription</h1>

<p>The publisher can add new fields to the form like below to capture more information from the subscriber and style as necessary.</p>

<hr />

<span class="text-danger">@Html.ValidationSummary(false)</span>

<form asp-action="Index">
    <div>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Email)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Email)
                <input asp-for="Email" type="hidden" class="form-control" />
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.FullName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.FullName)
                <input asp-for="FullName" type="hidden" class="form-control" />
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.OfferId)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.OfferId)
                <input asp-for="OfferId" type="hidden" class="form-control" />
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.PlanName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PlanName)
                <input asp-for="PlanName" type="hidden" class="form-control" />
            </dd>
            @* Only show if we are here for "modifying" a subscription *@
            @if (Model.ExistingSubscriptionStatus == StatusEnum.Subscribed)
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.AvailablePlans)
                </dt>

                <dd class="col-sm-10">

                    <select asp-for="NewPlan" asp-items="@(new SelectList(Model.AvailablePlans, "PlanId", "DisplayName"))" class="form-control">
                        <option value="">Choose a new plan</option>
                    </select>
                </dd>
            }
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubscriptionId)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubscriptionId)
                <input asp-for="SubscriptionId" type="hidden" class="form-control" />
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubscriptionName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubscriptionName)
                <input asp-for="SubscriptionName" type="hidden" class="form-control" />
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Region)
            </dt>
            <dd class="col-sm-10">
                <select asp-for="Region" asp-items="Html.GetEnumSelectList<TargetContosoRegionEnum>()" class="form-control">
                    <option selected="selected" value="">Please select</option>
                </select>
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.MaximumNumberOfThingsToHandle)
            </dt>
            <dd class="col-sm-10">
                <input asp-for="MaximumNumberOfThingsToHandle" class="form-control" />
            </dd>
        </dl>
        @* Just to carry over the subscription status, so we can determine if we are here for initial
            provisioning or configuration later in the life of the subscription*@
        <input asp-for="ExistingSubscriptionStatus" type="hidden" class="form-control" />
        <input asp-for="SubscriptionStatus" type="hidden" class="form-control" />
    </div>
    <div>
        <input type="submit"
               value="Submit"
               class="btn btn-primary" />
    </div>
</form>